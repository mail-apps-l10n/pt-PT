typeError=Erro: 
typeWarning=Aviso: 
typeNetwork=Rede: 
typeException=Excepção:  
typeCssParser=Analisador CSS: 
typeStrict=Aviso importante: 
msgCategory=Categoria: 
errFile=Ficheiro fonte: %S
errLine=Linha: %S
errLineCol=Linha: %S, Coluna: %S
errCode=Código fonte:
jsWorkspaceTitle=JS Workspace
btnHide=Ocultar
btnPrefs=Preferências
categoryPage=Página:
categoryConsole=Consola:
btnMutation=Mutação DOM 
tipMutation=Trocar registo de evento de mutação DOM
btnPageNet=Rede
tipPageNet=Trocar registo de evento da rede
btnPageCSS=CSS
tipPageCSS=Trocar registo de aviso CSS
btnPageJS=JS
tipPageJS=Registar excepções de JavaScript
btnConsoleErrors=Erros
tipConsoleErrors=Trocar registo console.error()
btnConsoleInfo=Info
tipConsoleInfo=Trocar registo console.info
btnConsoleWarnings=Avisos
tipConsoleWarnings=Trocar registo console.warn()
btnConsoleLog=Registo
tipConsoleLog=Trocar registo console.log
btnGlobal=Mensagens globais
tipGlobal=Trocar registo de mensagem global
localConsole=Consola local
btnClear=Limpar consola
tipClear=Limpar a saída da consola
stringFilter=Filtro
close.button=Fechar
close.accesskey=c
update.button=Actualizar
update.accesskey=u
# LOCALIZATION NOTE FOR `jsPropertyTitle` AND `jsPropertyInspectTitle`:
#
# The "PropertyPanel" is used to display a JS object to the user.
# If it is clear which object is being inspected (e.g., window, document object)
# the title of the panel is based on the `jsPropertyInspectTitle` string.
# If it isn't clear which object is being inspected, the `jsPropertyTitle` string
# gets used. This can be the case when the user logs an object to the WebConsole
# output using the console.log(aObjectToInspect) method.
#
# You can find a screenshot of the PropertyPanel here:
#   https://bug585030.bugzilla.mozilla.org/attachment.cgi?id=464034
jsPropertyTitle=Object Inspector
# LOCALIZATION NOTE FOR `jsPropertyInspectTitle`:
#
# The %S is replaced by the evaluated code the user clicked on in the console.
#
# Example: The user executed `window.document` in the WebConsole. The `document`
# object is written to the output. If the user clicks on the `document` output
# in the console, a PropertyPanel will show up. The title of the PropertyPanel
# is set to `Inspect: window.document` because the clicked `document` object was
# evaluated based on the `window.document` string.
jsPropertyInspectTitle=Inspeccionar: %S
copyCmd.label=Copiar
copyCmd.accesskey=C
